#!/usr/bin/env ruby
#
require 'json'

name = Dir.pwd.split("/").last.split(".").first
target = "/rails/app_js/#{name}"
source = "/var/repos/#{name}.git"

def check_for_committed_modules(source)
  puts `git --work-tree #{source} --git-dir #{source} show master:.gitignore | grep node_modules`
  if !$?.success?
    puts "Sorry! To prevent problems with conflicting react-native packages, your git repo must not have node_modules checked in. Please add node_modules to .gitignore and remove any checked-in node_modules."
    exit 1
  end
end

def npm_install(target)

  if File.exists?("#{target}/package.json")

    json = JSON.parse(File.read("#{target}/package.json"))

    if json['dependencies']
      if json['dependencies'].values.any? { |d| d.include?("/") }
        puts "Sorry, to prevent problems with conflicting react-native copies, we can't accept apps with git NPM sources. Please use official npm package versions."
        exit 1
      elsif json['dependencies']['react-native']
        json['dependencies'].delete('react-native')
        if json['devDependencies'] && json['devDependencies']['react-native']
          json['devDependencies'].delete('react-native')
        end
        File.open("#{target}/package.json", "w") {|f| f.write(JSON.pretty_generate(json))}
      end
      puts "Running 'npm install'..."
      puts `cd #{target} && npm install`
    end
  end
end

if File.exists?(target)
  check_for_committed_modules(source)
  puts `su app -c 'git --work-tree #{target} --git-dir #{target}/.git fetch origin && git --work-tree #{target} --git-dir #{target}/.git reset --hard origin/master'`
  npm_install(target)
else
  check_for_committed_modules(source)
  puts `su app -c 'git --work-tree #{target} --git-dir #{target}/.git clone #{source} /rails/app_js/#{name} & chown -R 9999:9999 #{target}'`
  npm_install(target)
end
